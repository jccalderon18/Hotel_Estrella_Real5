@model IEnumerable<HotelEstrellaReal5.Models.Cliente>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var Usuariopermitido = ViewData["UsarRol"] as string;
}

<!DOCTYPE html>
<html>
<head>
    <title>Clientes</title>

    <!-- Bootstrap Switch CSS (Switch tipo botón) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap4-toggle/css/bootstrap4-toggle.min.css" rel="stylesheet">

    <!-- DataTables CSS -->
    <link href="~/SideBar/plugins/datatables/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link href="~/SideBar/plugins/datatables/buttons.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link href="~/SideBar/plugins/datatables/responsive.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link href="~/SideBar/plugins/datatables/select.bootstrap4.min.css" rel="stylesheet" type="text/css" />

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Bootstrap Switch JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap4-toggle/js/bootstrap4-toggle.min.js"></script>

</head>

<body>
    <div class="row">
        <div class="col-xl-11">
            <div class="card-box table-responsive">
                <h1 class="text-center">Gestión de Clientes</h1>
                @if (Usuariopermitido == "1")
                {
                    <p>
                        <a class="botoncrear btn" asp-action="Create"><i class="bi bi-person-plus-fill"></i> Crear Cliente</a>
                    </p>
                }

                <table id="datatable-buttons" class="table table-dark table-bordered" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th class="border-white col-sm-2">@Html.DisplayNameFor(model => model.IdCliente)</th>
                            <th class="border-white col-sm-3">@Html.DisplayNameFor(model => model.NombreCompleto)</th>
                            <th class="border-white col-sm-2">@Html.DisplayNameFor(model => model.Telefono)</th>
                            <th class="border-white col-sm-2">@Html.DisplayNameFor(model => model.Email)</th>
                            <th class="border-white col-sm-1">@Html.DisplayNameFor(model => model.IdEstadoNavigation)</th>
                            <th class="border-white col-sm-2">Acciones</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr id="cliente-@item.IdCliente" class="@(item.IdEstadoNavigation.Estado1 == "Inactivo" ? "bg-inactivo" : "")">
                                <th class="border-white">@item.IdCliente</th>
                                <td class="border-white">@Html.DisplayFor(modelItem => item.NombreCompleto)</td>
                                <td class="border-white">@Html.DisplayFor(modelItem => item.Telefono)</td>
                                <td class="border-white">@Html.DisplayFor(modelItem => item.Email)</td>
                                <td class="border-white">
                                    <!-- Switch interactivo para estado activo/inactivo tipo botón -->
                                    <input type="checkbox" class="switch" data-id="@item.IdCliente"
                                    @(item.IdEstadoNavigation.Estado1 == "Activo" ? "checked" : "")
                                           data-toggle="toggle" data-on="Activo" data-off="Inactivo"
                                           data-onstyle="success" data-offstyle="danger"
                                    @(item.IdEstadoNavigation.Estado1 == "Inactivo" ? "disabled" : "") />
                                </td>
                                <td class="border-white">
                                    <a class="botoneditar btn-sm" title="Editar" asp-action="Edit" asp-route-id="@item.IdCliente"><i class="bi bi-pencil-square"></i></a> |
                                    <a class="botondetalle btn-sm" title="Detalles" asp-action="Details" asp-route-id="@item.IdCliente"><i class="bi bi-eye"></i></a> |
                                    <a class="botoneliminar btn-sm" title="Eliminar" asp-action="Delete" asp-route-id="@item.IdCliente"><i class="bi bi-trash3"></i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <style>
        /* Clase personalizada para sombrear filas inactivas */
        .bg-inactivo {
            background-color: rgba(178,186,187.2);
        }
    </style>
</body>
</html>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Mostrar notificación de éxito si TempData["ResultOk"] existe
            var resultOk = '@Html.Raw(TempData["ResultOk"] ?? "")';
            if (resultOk) {
                Swal.fire({
                    title: resultOk,
                    icon: 'success',
                    timer: 3000,
                    timerProgressBar: true,
                    position: 'center',
                    width: '22%',




                });
            }
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            // Configuración para DataTable con idioma en Español (Colombia)
            var languageSettings = {
                "sEmptyTable": "No hay datos disponibles en la tabla",
                "sInfo": "Mostrando _START_ a _END_ de _TOTAL_ entradas",
                "sInfoEmpty": "Mostrando 0 a 0 de 0 entradas",
                "sInfoFiltered": "(filtrado de _MAX_ entradas en total)",
                "sLengthMenu": "Mostrar _MENU_ entradas",
                "sLoadingRecords": "Cargando...",
                "sProcessing": "Procesando...",
                "sSearch": "Buscar:",
                "sZeroRecords": "No se han encontrado resultados",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior"
                },
                "oAria": {
                    "sSortAscending": ": activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": activar para ordenar la columna de manera descendente"
                }
            };

            // Default Datatable
            $('#datatable').DataTable({
                language: languageSettings  // Añadimos la configuración de idioma aquí
            });

            // Buttons examples
            var table = $('#datatable-buttons').DataTable({
                lengthChange: false,
                buttons: [
                    {
                        extend: 'excel',
                        text: '<i class="bi bi-filetype-exe"></i>',
                        className: 'botonexcel btn',
                        titleAttr: 'exportar excel'
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="bi bi-filetype-pdf"></i>',
                        className: 'botonpdf btn',
                        titleAttr: 'exportar pdf'
                    }
                ],
                scrollX: true,
                language: languageSettings,  // Añadimos la configuración de idioma aquí también
                initcomplete: function (json, settings) {
                    // Eliminar la clase de los estilos por defecto de DataTables
                    $(".dt-buttons").removeClass("dt-buttons");
                    // Agregar clase para añadir estilos personalizados
                    $(".dt-button").addClass("botones");
                }
            });

            // Key Tables
            $('#key-table').DataTable({
                keys: true,
                language: languageSettings  // Configurar idioma también aquí
            });

            // Responsive Datatable
            $('#responsive-datatable').DataTable({
                language: languageSettings  // Configurar idioma también aquí
            });

            // Multi Selection Datatable
            $('#selection-datatable').DataTable({
                select: {
                    style: 'multi'
                },
                language: languageSettings  // Configurar idioma también aquí
            });

            // Mover los botones de exportación al contenedor adecuado
            table.buttons().container()
                .appendTo('#datatable-buttons_wrapper .col-md-6:eq(0)');
        });
    </script>

    <script>
        $(document).ready(function () {
            // Inicializar los switchs con Bootstrap Toggle
            $('.switch').bootstrapToggle();

            // Manejar el cambio de estado en el switch
            $('.switch').change(function () {
                var clienteId = $(this).data('id');  // ID del cliente
                var estado = $(this).prop('checked') ? 'Activo' : 'Inactivo';  // Nuevo estado

                // Realizar la actualización del estado mediante AJAX
                $.ajax({
                    url: '@Url.Action("ActualizarEstado", "Cliente")', // Acción en el controlador
                    type: 'POST',
                    data: {
                        id: clienteId,
                        estado: estado
                    },
                    success: function (response) {
                        if (response.success) {
                            alert('Estado actualizado correctamente');

                            // Sombrear la fila si el cliente está inactivo
                            if (estado === "Inactivo") {
                                $('#cliente-' + clienteId).addClass('bg-inactivo');  // Aplicar clase de sombreado
                            } else {
                                $('#cliente-' + clienteId).removeClass('bg-inactivo');  // Eliminar clase de sombreado
                            }
                        } else {
                            alert('Error al actualizar el estado');
                            // Restaurar el switch al estado anterior
                            $(this).bootstrapToggle('toggle');
                        }
                    },
                    error: function () {
                        alert('Error de comunicación con el servidor');
                        $(this).bootstrapToggle('toggle');
                    }
                });
            });

            // Aplicar el sombreado a las filas inactivas al cargar la página
            $('tr').each(function () {
                var estado = $(this).find('input[type="checkbox"]').prop('checked') ? 'Activo' : 'Inactivo';
                if (estado === 'Inactivo') {
                    $(this).addClass('bg-inactivo'); // Sombrear si está inactivo
                }
            });
        });
    </script>

}
